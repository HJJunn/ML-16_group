1. 기계학습에서 '학습'이란 무엇인가?
기계 학습에서 '학습'이란 학습 데이터로부터 입력값에 대응하는 결과값이 제대로 나오도록 하는 최적의 매개변수 값을 찾는
과정이며, 그 때 학습의 결과물은 가중치 값이다.
예를 들어 컴퓨터의 계산은 3 x 2 = ? 6x3=? 와 같이 입력값을 주고 결과값을 찾는다.
이 때 답을 구하기 위해서 명령어를 입력하여 답을 구한다.
하지만 머신러닝 방법에서는 3 x □ + 2 x △ = 1 일때 기계는 입력값에서 정답을 만들어 내는 조건
즉, 가중치 또는 파라미터 값을 찾아 낸다.(□ = 1, △ = -1)
이렇게 입력갑과 출력값을 활용하여 적절한 매개변수 값을 찾아내는 과정을 기계학습이라고 하며
학습의 결과는 매개변수 값이다.

손실함수는 지도 학습 시 알고리즘이 예측한 값과 실제 정답의 차이를 비교하기 위한 함수
즉 함습 중에서 알고리즘이 얼마나 잘못 예측하는 정도를 확인하기 위한 함수로써
최적화를 위해 최소화하는 것이 목적인 함수이다.
손실 함수를 통해 모델 학습 중에 손실이 커질수록 학습이 잘 안되고 있다고 해석할 수 있고
반대로 손실이 작아질 수록 학습이 잘 이루어지고 있다고 해석한다.
이처럼 손실함수는 알고리즘 학습의 길잡이 역할을 하는 중요한 역할을 담당한다.
그렇다면 왜 기계학습은 정확도가 아니라 손실 함수를 지표로 사용할까?
기계학습은 학습에서 최적의 매개변수(가중치와 편향)을 탐색할 때, 손실 함수의 값을 가능한 작게 하는 매개변수 값을 찾는다.
이 때 기울기(gradient)를 계산하고, 이를 단서로 매개변수의 값을 서서히 갱신하는 과정을 반복한다.
기울기를 구하기 위해서는 매개변수의 미분을 계산해야 한다. 
미분 값이 0이 될 땐 매개변수를 어느 쪽으로 움직여도 손실 함수 값은 변하지 않는다. 
반면 정확도는 미분 값이 대부분의 장소에서 0이되어 매개변수를 갱신할 수가 없다. 
그렇게 되면 가중치 매개변수를 조금 수정하더라도 정확도가 개선되지 않고 일정하게 유지한다.
정확도는 매개변수의 미세한 변화에는 거의 반응하지 않고 불연속적으로 변화한다. 이러한 이유로 손실 함수를 지표로 사용하는 것이다.

2.확률적 경사 하강법의 소스 코드 분석
n_epochs = 50 # epoch는 데이터셋에서의 반복 횟수를 말하는 것으로 50회로 지정됨.
t0, t1 = 5, 50  # 학습 스케줄 하이퍼파라미터

def learning_schedule(t): # 학습 스케쥴 함수
    return t0 / (t + t1)

theta = np.random.randn(2,1)  # 가중치 값 랜덤 초기화

for epoch in range(n_epochs): # 에포크 수 만큼 반복
    for i in range(m):
        if epoch == 0 and i < 20: # 첫 에포크에0~20회 예측 그리기                   
        random_index = np.random.randint(m) # 인덱스 랜덤 선택
        xi = X_b[random_index:random_index+1] # X값 받아오기
        yi = y[random_index:random_index+1] # Y값 받아오기
        gradients = 2 * xi.T.dot(xi.dot(theta) - yi) # 기울기 계산 식
        eta = learning_schedule(epoch * m + i) # 학습률 계산
        theta = theta - eta * gradients # 가중치 값 업데이트 (경사 하강법의 스텝의 크기)
