*1. 작업환경
1) 사이킷런 - 회귀 분석, 분류 분석과 같은 머신러닝 알고리즘을 파이썬으로 구현할 수 있게 해준다.
또한, 사이킷런 알고리즘을 데이터 양, 라벨(정답)의 유무, 데아터의 종류(수치형, 범주형) 등으로 나누고 있다.

2) numpy - 넘파이는 벡터 및 행렬 연산에 있어서 매우 편리한 기능을 제공한다.
 이는 데이터 분석을 할 때 필요한 pandas, matplotlib의 기반으로 사용된다.

3) os - 운영체제에 접근하게 해주는 파이썬 모듈, 컴퓨터 라이브러리로 접근해서 csv폴더나 데이터 파일등을 가져올 수 있게 해준다.

*2. test_set을 8:2로 분류한 것이 과대적합을 항상 피할 수 있는가
계속해서 8:2로 테스트 셋을 분류한다고 해서 항상 과대적합을 피할 수 있는것은 아니다.
왜냐하면 샘플이 항상 모집단의 비율을 나타낼 수 없다. 샘플링을 하다보면 편향이 생길 수도 있다.
1)이것을 방지하기 위해선 "계층적 샘플링"을 하여야 한다.
계층적 샘플링은 모집단을 동질한 그룹으로 나누고 각 계층에서 올바른 수의 샘플을 추출하여 모집단의 데이터 비율을 유지하면서 샘플링 할 수 있는 방법이다.
2)또 다른 방법으로는 학습모델을 변경하거나 모델에 일정한 규제를 가해서 정확도를 나주는 방식으로 모델을 간이화해 통상적으로 적용할 수 있는 모델을 만들어 낼 수 있을 것이다.

*3 무작위 샘플링 vs 계층적 샘플링
계층적 샘플링은 긱 계층에서 데이터를 추출해서 학습해야 하는 반면, 무작위 샘플링은 학습하기도 간단하고 상대적으로 자료를 분석하기가 쉽다.
또한 계층적 샘플링은 조건을 나누는 반면 무작위 샘플링은 전체 모집단에서 샘플링 하므로, 결과가 다양하다. 
계층적 샘플링은 무작위 샘플링에 비해 시간은 더 소모되지만 데이터 표본이 균일하고 학습 패턴이 생성되기에 유리하다는 장점이 있다.
따라서 모델의 일반화 측면에서는 계층적 샘플링이 크게 유리한 것 같다.
